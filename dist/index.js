"use strict";
require("typings-global");
var path = require("path");
var q = require("q");
var childProcess = require("child_process");
var earlyChild;
var doAnimation = true;
var doText = false;
if (process.argv.indexOf("-v") != -1 || process.env.CI) {
    doAnimation = false;
}
else if (process.argv.indexOf("-v") == -1) {
    doText = true;
}
// exports
exports.start = function (moduleNameArg, loaderLengthArg) {
    if (moduleNameArg === void 0) { moduleNameArg = ""; }
    if (loaderLengthArg === void 0) { loaderLengthArg = "10"; }
    if (doAnimation) {
        earlyChild = childProcess.fork(path.join(__dirname, "early.child.js"), [], {
            env: {
                moduleNameArg: moduleNameArg,
                loaderLengthArg: loaderLengthArg,
                CI: process.env.CI
            }
        });
    }
    else if (doText) {
        console.log("**** starting " + moduleNameArg.cyan + " ****");
    }
};
exports.stop = function () {
    var done = q.defer();
    if (doAnimation) {
        earlyChild.kill();
        earlyChild.on("close", function () {
            done.resolve();
        });
    }
    else {
        done.resolve();
    }
    return done.promise;
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxRQUFPLGdCQUNQLENBQUMsQ0FEc0I7QUFFdkIsSUFBTyxJQUFJLFdBQVcsTUFBTSxDQUFDLENBQUM7QUFDOUIsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRXJCLElBQU8sWUFBWSxXQUFXLGVBQWUsQ0FBQyxDQUFDO0FBQy9DLElBQUksVUFBVSxDQUFDO0FBRWYsSUFBSSxXQUFXLEdBQVcsSUFBSSxDQUFDO0FBQy9CLElBQUksTUFBTSxHQUFXLEtBQUssQ0FBQztBQUMzQixFQUFFLENBQUEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFBLENBQUM7SUFDbkQsV0FBVyxHQUFHLEtBQUssQ0FBQztBQUN4QixDQUFDO0FBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUEsQ0FBQztJQUN4QyxNQUFNLEdBQUcsSUFBSSxDQUFDO0FBQ2xCLENBQUM7QUFFRCxVQUFVO0FBQ0MsYUFBSyxHQUFHLFVBQVMsYUFBeUIsRUFBQyxlQUE2QjtJQUF2RCw2QkFBeUIsR0FBekIsa0JBQXlCO0lBQUMsK0JBQTZCLEdBQTdCLHNCQUE2QjtJQUMvRSxFQUFFLENBQUEsQ0FBQyxXQUFXLENBQUMsQ0FBQSxDQUFDO1FBQ1osVUFBVSxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUMsZ0JBQWdCLENBQUMsRUFBQyxFQUFFLEVBQUM7WUFDcEUsR0FBRyxFQUFFO2dCQUNELGFBQWEsRUFBQyxhQUFhO2dCQUMzQixlQUFlLEVBQUMsZUFBZTtnQkFDL0IsRUFBRSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTthQUNyQjtTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNoQixPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixHQUFHLGFBQWEsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLENBQUM7SUFDakUsQ0FBQztBQUNMLENBQUMsQ0FBQztBQUVTLFlBQUksR0FBRztJQUNkLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNyQixFQUFFLENBQUEsQ0FBQyxXQUFXLENBQUMsQ0FBQSxDQUFDO1FBQ1osVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2xCLFVBQVUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFDO1lBQ2xCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFBQyxJQUFJLENBQUMsQ0FBQztRQUNKLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7QUFDeEIsQ0FBQyxDQUFDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwidHlwaW5ncy1nbG9iYWxcIlxuaW1wb3J0IGNvbG9ycyA9IHJlcXVpcmUoXCJjb2xvcnNcIik7XG5pbXBvcnQgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xubGV0IHEgPSByZXF1aXJlKFwicVwiKTtcbmltcG9ydCByZWFkbGluZSA9IHJlcXVpcmUoXCJyZWFkbGluZVwiKTtcbmltcG9ydCBjaGlsZFByb2Nlc3MgPSByZXF1aXJlKFwiY2hpbGRfcHJvY2Vzc1wiKTtcbmxldCBlYXJseUNoaWxkO1xuXG5sZXQgZG9BbmltYXRpb246Ym9vbGVhbiA9IHRydWU7XG5sZXQgZG9UZXh0OmJvb2xlYW4gPSBmYWxzZTtcbmlmKHByb2Nlc3MuYXJndi5pbmRleE9mKFwiLXZcIikgIT0gLTEgfHwgcHJvY2Vzcy5lbnYuQ0kpe1xuICAgIGRvQW5pbWF0aW9uID0gZmFsc2U7XG59IGVsc2UgaWYocHJvY2Vzcy5hcmd2LmluZGV4T2YoXCItdlwiKSA9PSAtMSl7XG4gICAgZG9UZXh0ID0gdHJ1ZTtcbn1cblxuLy8gZXhwb3J0c1xuZXhwb3J0IGxldCBzdGFydCA9IGZ1bmN0aW9uKG1vZHVsZU5hbWVBcmc6c3RyaW5nID0gXCJcIixsb2FkZXJMZW5ndGhBcmc6c3RyaW5nID0gXCIxMFwiKXtcbiAgICBpZihkb0FuaW1hdGlvbil7XG4gICAgICAgIGVhcmx5Q2hpbGQgPSBjaGlsZFByb2Nlc3MuZm9yayhwYXRoLmpvaW4oX19kaXJuYW1lLFwiZWFybHkuY2hpbGQuanNcIiksW10se1xuICAgICAgICAgICAgZW52OiB7XG4gICAgICAgICAgICAgICAgbW9kdWxlTmFtZUFyZzptb2R1bGVOYW1lQXJnLFxuICAgICAgICAgICAgICAgIGxvYWRlckxlbmd0aEFyZzpsb2FkZXJMZW5ndGhBcmcsXG4gICAgICAgICAgICAgICAgQ0k6IHByb2Nlc3MuZW52LkNJXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoZG9UZXh0KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiKioqKiBzdGFydGluZyBcIiArIG1vZHVsZU5hbWVBcmcuY3lhbiArIFwiICoqKipcIik7XG4gICAgfVxufTtcblxuZXhwb3J0IGxldCBzdG9wID0gZnVuY3Rpb24oKXtcbiAgICBsZXQgZG9uZSA9IHEuZGVmZXIoKTtcbiAgICBpZihkb0FuaW1hdGlvbil7XG4gICAgICAgIGVhcmx5Q2hpbGQua2lsbCgpO1xuICAgICAgICBlYXJseUNoaWxkLm9uKFwiY2xvc2VcIixmdW5jdGlvbigpe1xuICAgICAgICAgICAgZG9uZS5yZXNvbHZlKCk7XG4gICAgICAgIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgICAgZG9uZS5yZXNvbHZlKCk7XG4gICAgfVxuICAgIHJldHVybiBkb25lLnByb21pc2U7XG59O1xuXG4iXX0=
